@page "/login"
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<h3>Login</h3>


<EditForm Model="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>

    <div class="text-danger">
        <span>
            @errorMessage
        </span>
    </div>
</EditForm>

@code {
    UserLogin user = new UserLogin();
    string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(user);

        if(result.Success)
        {
            await LocalStorage.SetItemAsStringAsync("authToken", result.Data);
            NavigationManager.NavigateTo("");
        }
        else
        {
            errorMessage = result.Message;
        }
    }
}
